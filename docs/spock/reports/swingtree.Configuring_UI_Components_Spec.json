{
  "className":"swingtree.Configuring_UI_Components_Spec",
  "title":"Configuring UI withMethod Chaining",
  "narrative":"The declarative nature of Swing-Tree is enabled by 1 fundamental\n    design patterns:\n\n    > Composition and Method Chaining!\n\n    So every method on a Swing-Tree UI builder node returns the node\n    instance itself.\n    This is especially useful when you want to configure a UI component.\n\n    In this specification we will see what this looks like.",
  "subjects":[],
  "statistics":{
    "runs":"4",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"?"
  },
  "headers":[],"tags":{},"see":[],
  "features":[ 
    {
      "id":"We can make a UI component grab the current input focus.",
      "result":"PASS",
      "duration":"?",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"We create a UI with a button that grabs the focus and some other components.","code":["var ui =","    UI.frame()","    .add(","        UI.textArea(\"Text :)\").id(\"C1\"),","        UI.checkBox(\"Check\").id(\"C2\"),","        UI.button(\"Button\").id(\"C3\").makeFocused(),","        UI.toggleButton(\"Toggle\").id(\"C4\")","    )"]},

        {"kind":"and","text":"We build the component tree.","code":["var frame = ui.get(JFrame)"]},

        {"kind":"and","text":"We wait for the UI thread to do its thing.","code":["UI.sync()"]},

        {"kind":"expect","text":"","code":["new Utility.Query(frame).find(JTextArea,     \"C1\").isPresent()","new Utility.Query(frame).find(JCheckBox,     \"C2\").isPresent()","new Utility.Query(frame).find(JButton,       \"C3\").isPresent()","new Utility.Query(frame).find(JToggleButton, \"C4\").isPresent()"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Use the \"makeDefaultButton()\" method to make a button the default button.",
      "result":"PASS",
      "duration":"?",
      "iterations":{
      "tags":{},"see":[],"extraInfo":["\n            The so called \"default button\" is the button that is activated when\n            the user presses the \"Enter\" key.\n            In Swing this is a bit tricky to configure. You have to set the\n            \"default button\" property on the root pane of the UI.\n            Swing-Tree does this for you automatically when you call the\n            \"makeDefaultButton()\" method on a button.\n        "]
      },
      "blocks":[
        {"kind":"given","text":"We create a UI with a button that is made the default button.","code":["var ui =","    UI.runAndGet( () -> // For technical reasons we execute this in the GUI thread.","        UI.frame()","        .add(","            UI.textArea(\"Text :)\").id(\"C1\"),","            UI.checkBox(\"Check\").id(\"C2\"),","            UI.button(\"Button\").id(\"C3\").makeDefaultButton(),","            UI.toggleButton(\"Toggle\").id(\"C4\")","        )","    )"]},

        {"kind":"and","text":"We build the component tree.","code":["var frame = ui.get(JFrame)"]},

        {"kind":"and","text":"We wait for the UI thread to do its thing.","code":["UI.sync()","Thread.sleep(1_000)","UI.sync()"]},

        {"kind":"expect","text":"","code":["new Utility.Query(frame).find(JTextArea,     \"C1\").isPresent()","new Utility.Query(frame).find(JCheckBox,     \"C2\").isPresent()","new Utility.Query(frame).find(JButton,       \"C3\").isPresent()","new Utility.Query(frame).find(JToggleButton, \"C4\").isPresent()"]},

        {"kind":"and","text":"","code":["frame.rootPane.defaultButton == new Utility.Query(frame).find(JButton, \"C3\").get()"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"The visibility of a component can be configured using various methods.",
      "result":"PASS",
      "duration":"?",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"We create a UI with a button which may or may not be visible.","code":["var ui =","    UI.panel()","    .add(","        UI.slider(UI.Align.HORIZONTAL).id(\"C1\").isVisibleIf(true),","        UI.editorPane().id(\"C2\").isVisibleIf(false),","        UI.splitButton(\"Button\").id(\"C3\").isVisibleIfNot(true),","        UI.toggleButton(\"Toggle\").id(\"C4\").isVisibleIfNot(false)","    )"]},

        {"kind":"and","text":"We build the panel based component tree.","code":["var panel = ui.get(JPanel)"]},

        {"kind":"expect","text":"The components are visible or not depending on the configuration.","code":["new Utility.Query(panel).find(JSlider, \"C1\").get().isVisible() == true","new Utility.Query(panel).find(JEditorPane, \"C2\").get().isVisible() == false","new Utility.Query(panel).find(JSplitButton, \"C3\").get().isVisible() == false","new Utility.Query(panel).find(JToggleButton, \"C4\").get().isVisible() == true"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"We can configure a button to have no border.",
      "result":"PASS",
      "duration":"?",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"We create a UI with buttons that may or may not have borders.","code":["var ui =","    UI.panel()","    .add(","        UI.button(\"Button\").id(\"C1\").isBorderPaintedIf(false),","        UI.toggleButton(\"Toggle\").id(\"C2\").isBorderPaintedIf(true),","        UI.splitButton(\"Split\").id(\"C3\").isBorderPaintedIf(false),","    )"]},

        {"kind":"and","text":"We build the panel based component tree.","code":["var panel = ui.get(JPanel)"]},

        {"kind":"expect","text":"The components have borders or not depending on the configuration.","code":["new Utility.Query(panel).find(JButton, \"C1\").get().isBorderPainted() == false","new Utility.Query(panel).find(JToggleButton, \"C2\").get().isBorderPainted() == true","new Utility.Query(panel).find(JSplitButton, \"C3\").get().isBorderPainted() == false"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}
