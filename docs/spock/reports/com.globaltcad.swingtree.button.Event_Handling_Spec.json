{
  "className":"com.globaltcad.swingtree.button.Event_Handling_Spec",
  "title":"Registering Event Handlers",
  "narrative":"In this specification you can see how to register different kinds of event handlers\n    on Swing components.",
  "subjects":[],
  "statistics":{
    "runs":"4",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"0.159 seconds"
  },
  "headers":[],"tags":{},"see":[],
  "features":[ 
    {
      "id":"The \"onChange\" event handlers are triggered in the same order as they were registered.",
      "result":"PASS",
      "duration":"0.070 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"A simple list where handlers are going to leave a trace.","code":["var record = []"]},

        {"kind":"and","text":"A simple radio button UI.","code":["var ui =","        UI.radioButton(\"CLICK ME\")","        .onChange( it -> record.add(\"1\") )","        .onChange( it -> record.add(\"2\") )","        .onChange( it -> record.add(\"3\") )","        .onChange( it -> record.add(\"4\") )","        .onChange( it -> record.add(\"5\") )","        .onChange( it -> record.add(\"6\") )","        .onChange( it -> record.add(\"7\") )"]},

        {"kind":"when","text":"The button is clicked.","code":["ui.component.doClick()"]},

        {"kind":"then","text":"The handlers are triggered in the same order as they were registered.","code":["record == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"The \"onClick\" event handlers are triggered in the same order as they were registered.",
      "result":"PASS",
      "duration":"0.069 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"A simple list where handlers are going to leave a trace.","code":["var record = []"]},

        {"kind":"and","text":"A simple button UI.","code":["var ui =","        UI.button(\"CLICK ME\")","        .onClick( it -> record.add(\"1\") )","        .onClick( it -> record.add(\"2\") )","        .onClick( it -> record.add(\"3\") )","        .onClick( it -> record.add(\"4\") )","        .onClick( it -> record.add(\"5\") )","        .onClick( it -> record.add(\"6\") )","        .onClick( it -> record.add(\"7\") )"]},

        {"kind":"when","text":"The button is clicked.","code":["ui.component.doClick()"]},

        {"kind":"then","text":"The handlers are triggered in the same order as they were registered.","code":["record == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"The \"onResize\" event handlers are triggered in the same order as they were registered.",
      "result":"PASS",
      "duration":"0.010 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"A simple list where handlers are going to leave a trace.","code":["var record = []"]},

        {"kind":"and","text":"A simple text field UI.","code":["var ui =","        UI.formattedTextField(\"Some content...\")","        .onResize( it -> record.add(\"1\") )","        .onResize( it -> record.add(\"2\") )","        .onResize( it -> record.add(\"3\") )","        .onResize( it -> record.add(\"4\") )","        .onResize( it -> record.add(\"5\") )","        .onResize( it -> record.add(\"6\") )","        .onResize( it -> record.add(\"7\") )"]},

        {"kind":"when","text":"The text field is resized.","code":["ui.component.setSize(100, 100)","UI.sync()"]},

        {"kind":"then","text":"The handlers are triggered in the same order as they were registered.","code":["record == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"The \"onShown\" event handlers are triggered in the same order as they were registered.",
      "result":"PASS",
      "duration":"0.006 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"A simple list where handlers are going to leave a trace.","code":["var record = []"]},

        {"kind":"and","text":"A simple text area UI.","code":["var ui =","        UI.textArea(\"Some content...\")","        .onShown( it -> record.add(\"1\") )","        .onShown( it -> record.add(\"2\") )","        .onShown( it -> record.add(\"3\") )","        .onShown( it -> record.add(\"4\") )","        .onShown( it -> record.add(\"5\") )","        .onShown( it -> record.add(\"6\") )","        .onShown( it -> record.add(\"7\") )"]},

        {"kind":"when","text":"The text area is set to visible.","code":["ui.component.setVisible(true)","UI.sync()"]},

        {"kind":"then","text":"Nothing happens because the text area is already shown.","code":["record == []"]},

        {"kind":"when","text":"The text area is set to invisible and then visible again.","code":["ui.component.setVisible(false)","ui.component.setVisible(true)","UI.sync()"]},

        {"kind":"then","text":"The handlers are triggered in the same order as they were registered.","code":["record == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}