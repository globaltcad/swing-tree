{
  "className":"com.globaltcad.swingtree.mvvm.Button_Binding_Spec",
  "title":"Button Binding",
  "narrative":"As a developer, I want to bind a button to a property so \n    that is is updated when the property changes.\n    Binding is a powerful feature that allows us to create\n    UIs which are not only decoupled from the business logic of\n    an application, but also make it easy to create UIs which\n    are dynamic and reactive.",
  "subjects":[],
  "statistics":{
    "runs":"3",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"0.021 seconds"
  },
  "headers":[],"tags":{},"see":[],
  "features":[ 
    {
      "id":"We can bind to the text of a button.",
      "result":"PASS",
      "duration":"0.013 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":["\n            Note that for a binding to work, the property must be a Var or Val\n            implementation and it is required to call the \"show()\" method on the\n            property to apply its value to the view.\n        "]
      },
      "blocks":[
        {"kind":"given","text":"We create a simple swing-tree property for modelling the text.","code":["Val<String> text = Var.of(\"Hello World\")"]},

        {"kind":"when","text":"We create and bind to a button UI node...","code":["var node = UI.button(\"\").withText(text)"]},

        {"kind":"then","text":"The button should be updated when the property changes.","code":["node.component.text == \"Hello World\""]},

        {"kind":"when","text":"We change the property value...","code":["text.set(\"Goodbye World\")"]},

        {"kind":"then","text":"The button should NOT be updated.","code":["node.component.text == \"Hello World\""]},

        {"kind":"when","text":"We call the \"view\" method on the property...","code":["text.show()"]},

        {"kind":"then","text":"The button should be updated.","code":["node.component.text == \"Goodbye World\""]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"You can bind to the selection state of a button.",
      "result":"PASS",
      "duration":"0.002 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":["\n            Note that this works with all kinds of buttons, not just the JButton.\n        "]
      },
      "blocks":[
        {"kind":"given","text":"We create a simple swing-tree property for modelling the selection state.","code":["Val<Boolean> selected = Var.of(false)"]},

        {"kind":"when","text":"We create and bind to a button UI node...","code":["var node = UI.button(\"\").isSelectedIf(selected)"]},

        {"kind":"then","text":"The button should be updated when the property changes.","code":["node.component.selected == false"]},

        {"kind":"when","text":"We change the property value...","code":["selected.set(true)"]},

        {"kind":"then","text":"The button should NOT be updated.","code":["node.component.selected == false"]},

        {"kind":"when","text":"We call the \"view\" method on the property...","code":["selected.show()"]},

        {"kind":"then","text":"The button should be updated.","code":["node.component.selected == true"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"You can bind to the enabled state of a button.",
      "result":"PASS",
      "duration":"0.002 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":["  \n            Note that this works with all kinds of buttons, not just the JButton.\n        "]
      },
      "blocks":[
        {"kind":"given","text":"We create a simple swing-tree property for modelling the selection state.","code":["Val<Boolean> enabled = Var.of(false)"]},

        {"kind":"when","text":"We create and bind to a button UI node...","code":["var node = UI.button(\"\").isEnabledIf(enabled)"]},

        {"kind":"then","text":"The button should be updated when the property changes.","code":["node.component.enabled == false"]},

        {"kind":"when","text":"We change the property value...","code":["enabled.set(true)"]},

        {"kind":"then","text":"The button should NOT be updated.","code":["node.component.enabled == false"]},

        {"kind":"when","text":"We call the \"view\" method on the property...","code":["enabled.show()"]},

        {"kind":"then","text":"The button should be updated.","code":["node.component.enabled == true"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}